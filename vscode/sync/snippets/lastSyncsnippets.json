{"ref":"bec21e0e-3640-4330-8a10-6f73145c6c21","syncData":{"version":1,"machineId":"9a0d1baf-c714-4281-a566-10c0402a7855","content":"{\"css.json\":\"{\\n/*\\n\\t// Place your snippets for CSS here. Each snippet is defined under a snippet name and has a prefix, body and\\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\n\\t// same ids are connected.\\n\\t// Example:\\n\\t\\\"Print to console\\\": {\\n\\t\\t\\\"prefix\\\": \\\"log\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"console.log('$1');\\\",\\n\\t\\t\\t\\\"$2\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t}\\n*/\\n\\t\\\"CSS Module\\\": {\\n\\t\\t\\\"prefix\\\": \\\"cssmodule\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\".root {$0\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t}\\n}\\n\",\"typescript.json\":\"{\\n/*\\n\\t// Place your snippets for TypeScript here. Each snippet is defined under a snippet name and has a prefix, body and\\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\n\\t// same ids are connected.\\n\\t// Example:\\n\\t\\\"Print to console\\\": {\\n\\t\\t\\\"prefix\\\": \\\"log\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"console.log('$1');\\\",\\n\\t\\t\\t\\\"$2\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t}\\n*/\\n\\t\\\"CSS Module\\\": {\\n\\t\\t\\\"prefix\\\": \\\"cssmodule\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"export const root: string;\\\",\\n\\t\\t\\t\\\"$0\\\"\\n\\t\\t]\\n\\t}\\n}\\n\",\"typescriptreact.json\":\"{\\n/*\\n\\t// Place your snippets for TypeScript React here. Each snippet is defined under a snippet name and has a prefix, body and\\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\n\\t// same ids are connected.\\n\\t// Example:\\n\\t\\\"Print to console\\\": {\\n\\t\\t\\\"prefix\\\": \\\"log\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"console.log('$1');\\\",\\n\\t\\t\\t\\\"$2\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t}\\n*/\\n\\t\\\"Pure React component\\\": {\\n\\t\\t\\\"prefix\\\": \\\"PureComponent\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import * as cx from 'classnames';\\\",\\n\\t\\t\\t\\\"import * as React from 'react';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"import * as styles from './$1.css';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export interface $1Props {\\\",\\n\\t\\t\\t\\\"\\\\tclassName?: string;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"interface $1State {\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"class $1 extends React.PureComponent<$1Props, $1State> {\\\",\\n\\t\\t\\t\\\"\\\\tpublic render(): JSX.Element {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tconst { className } = this.props;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<${2:div} className={cx(styles.root, className)}>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t$0\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t</${2:div}>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default $1;\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"Stateful React component\\\": {\\n\\t\\t\\\"prefix\\\": \\\"StatefulComponent\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import * as cx from 'classnames';\\\",\\n\\t\\t\\t\\\"import * as React from 'react';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"import * as styles from './$1.css';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export interface $1Props {\\\",\\n\\t\\t\\t\\\"\\\\tclassName?: string;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export interface $1State {\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"class $1 extends React.PureComponent<$1Props, $1State> {\\\",\\n\\t\\t\\t\\\"\\\\tconstructor(props: $1Props, context: {}) {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tsuper(props, context);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"\\\\tpublic render(): JSX.Element {\\\",\\n\\t\\t\\t\\\"\\\\t\\\\tconst { className } = this.props;\\\",\\n\\t\\t\\t\\\"\\\\t\\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t<${2:div} className={cx(styles.root, className)}>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t\\\\t$0\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t</${2:div}>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t);\\\",\\n\\t\\t\\t\\\"\\\\t}\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default $1;\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"Stateless React component\\\": {\\n\\t\\t\\\"prefix\\\": \\\"StatelessComponent\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"import * as cx from 'classnames';\\\",\\n\\t\\t\\t\\\"import * as React from 'react';\\\",\\n\\t\\t\\t\\\"import { pure } from 'recompose';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"import * as styles from './$1.css';\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export interface $1Props {\\\",\\n\\t\\t\\t\\\"\\\\tclassName?: string;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"function $1(props: $1Props): JSX.Element {\\\",\\n\\t\\t\\t\\\"\\\\tconst { className } = props;\\\",\\n\\t\\t\\t\\\"\\\\treturn (\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t<${2:div} className={cx(styles.root, className)}>\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t\\\\t$0\\\",\\n\\t\\t\\t\\\"\\\\t\\\\t</${2:div}>\\\",\\n\\t\\t\\t\\\"\\\\t);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"export default pure($1);\\\",\\n\\t\\t\\t\\\"\\\"\\n\\t\\t]\\n\\t}\\n}\\n\"}"}}